{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/admin.component.css","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/course-grid/course-grid.component.css","webpack:///./src/app/course-grid/course-grid.component.html","webpack:///./src/app/course-grid/course-grid.component.ts","webpack:///./src/app/course-navigator/course-navigator.component.css","webpack:///./src/app/course-navigator/course-navigator.component.html","webpack:///./src/app/course-navigator/course-navigator.component.ts","webpack:///./src/app/course-viewer/course-viewer.component.css","webpack:///./src/app/course-viewer/course-viewer.component.html","webpack:///./src/app/course-viewer/course-viewer.component.ts","webpack:///./src/app/enrolled-courses/enrolled-courses.component.css","webpack:///./src/app/enrolled-courses/enrolled-courses.component.html","webpack:///./src/app/enrolled-courses/enrolled-courses.component.ts","webpack:///./src/app/hello-world/hello-world.component.css","webpack:///./src/app/hello-world/hello-world.component.html","webpack:///./src/app/hello-world/hello-world.component.ts","webpack:///./src/app/lesson-tabs/lesson-tabs.component.css","webpack:///./src/app/lesson-tabs/lesson-tabs.component.html","webpack:///./src/app/lesson-tabs/lesson-tabs.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/models/course.model.client.ts","webpack:///./src/app/module-list/module-list.component.css","webpack:///./src/app/module-list/module-list.component.html","webpack:///./src/app/module-list/module-list.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/section-list/section-list.component.css","webpack:///./src/app/section-list/section-list.component.html","webpack:///./src/app/section-list/section-list.component.ts","webpack:///./src/app/services/course-navigator.service.client.ts","webpack:///./src/app/services/course.service.client.ts","webpack:///./src/app/services/lesson.service.client.ts","webpack:///./src/app/services/module.service.client.ts","webpack:///./src/app/services/section.service.client.ts","webpack:///./src/app/services/topic.service.client.ts","webpack:///./src/app/services/user.service.client.ts","webpack:///./src/app/services/widget.service.client.ts","webpack:///./src/app/topic-pills/topic-pills.component.css","webpack:///./src/app/topic-pills/topic-pills.component.html","webpack:///./src/app/topic-pills/topic-pills.component.ts","webpack:///./src/app/white-board/white-board.component.css","webpack:///./src/app/white-board/white-board.component.html","webpack:///./src/app/white-board/white-board.component.ts","webpack:///./src/app/widget-list/widget-list.component.css","webpack:///./src/app/widget-list/widget-list.component.html","webpack:///./src/app/widget-list/widget-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".list-group-item.active {\\r\\n  z-index: 2;\\r\\n  color: #fff;\\r\\n  background-color: rgba(0,168,255,0.5);\\r\\n  border-color: rgba(0,168,255,0.5);\\r\\n}\\r\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-light\\\" style=\\\"background-color: #e3f2fd;\\\">\\n  <!--<a class=\\\"navbar-brand\\\" href=\\\"#\\\">White-Board</a>-->\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\" style=\\\"color: #007bff; font-size: x-large\\\">WhiteBoard</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\"\\n          aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/home\\\">Home</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" [hidden]=!loggedIn>\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/profile\\\">Profile</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" [hidden]=!loggedIn>\\n        <a class=\\\"nav-link\\\" [hidden]=!admin\\n           routerLink=\\\"/admin\\\">Admin</a>\\n      </li>\\n    </ul>\\n    <!--<form class=\\\"form-inline my-2 my-lg-0\\\">-->\\n    <form class=\\\"form-inline mt-2 mt-md-0\\\">\\n      <span class=\\\"navbar-text\\\">\\n        Logged in as : </span>\\n      <span style=\\\"color: dimgrey; font-weight: bold\\\">&nbsp;{{username}}\\n      </span>\\n      &nbsp;&nbsp;\\n      <button class=\\\"btn btn-outline-primary my-2 my-sm-0\\\"\\n              (click)=\\\"logout()\\\">Logout\\n      </button>\\n    </form>\\n  </div>\\n</nav>\\n\\n<div style=\\\"margin: 5px; padding: 15px;\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col mr-0\\\">\\n      <ul class=\\\"list-group rounded py-1 my-1\\\" style=\\\"width: 18rem\\\">\\n        <li *ngFor=\\\"let course of courses\\\"\\n            class=\\\"list-group-item shadow rounded my-2\\\"\\n            (click)=\\\"selectCourse(course.id)\\\"\\n            [ngClass]=\\\"{'active': course.id === selectedCourseId}\\\">\\n          <span style=\\\"font-size: large; color:dodgerblue;\\\"> </span>{{course.title}}\\n          <!--<button class=\\\"float-right btn btn-outline-primary float-right\\\"-->\\n          <!--routerLink=\\\"/course/{{course.id}}/section\\\">View Sections</button>-->\\n          <!--(click)=\\\"showSections(section)\\\"-->\\n        </li>\\n      </ul>\\n    </div>\\n    <div class=\\\"col-8 ml-0\\\">\\n      <!--<h3 class=\\\"mb-1 text-center\\\" style=\\\"color: dimgray;\\\"> Section Editor</h3>-->\\n      <div style=\\\"padding: 10px;\\\">\\n        <h2 style=\\\"color: darkorange\\\" class=\\\"text-center\\\">Sections</h2>\\n        <div [hidden]=!admin>\\n          <div class=\\\"row ml-1 mb-2\\\">\\n            <button [hidden]=addMode\\n                    [disabled] = updateMode\\n                    (click)=\\\"addSection()\\\"\\n                    class=\\\"float-right btn btn-outline-warning rounded shadow\\\">\\n              <i class=\\\"fas fa-plus\\\"></i>&nbsp;&nbsp;Add new section\\n            </button>\\n\\n          </div>\\n          <h4 [hidden]=!updateMode class=\\\"text-center p-0 mb-2\\\" style=\\\"color: limegreen\\\">Edit this section</h4>\\n          <div [hidden] = !updateMode>\\n          <form>\\n\\n            <div class=\\\"form-group row\\\">\\n              <label for=\\\"sectionFld1\\\" class=\\\"text-center col-form-label\\\"  style=\\\"width:15%\\\">\\n                Section Name </label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input [ngModelOptions]=\\\"{standalone: true}\\\"\\n                       [(ngModel)]=\\\"sectionName\\\"\\n                       id=\\\"sectionFld1\\\"\\n                       class=\\\"form-control wbdv-password-fld\\\"\\n                       placeholder=\\\"Section Name\\\">\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n              <label for=\\\"seatsFld2\\\" class=\\\"text-center col-form-label\\\" style=\\\"width:15%\\\">\\n                Max Seats</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input [ngModelOptions]=\\\"{standalone: true}\\\"\\n                       [(ngModel)]=\\\"maxSeats\\\"\\n                       id=\\\"seatsFld2\\\"\\n                       class=\\\"form-control wbdv-password-fld\\\"\\n                       placeholder=\\\"Max Seats in section\\\">\\n              </div>\\n            </div>\\n            <button id=\\\"updateBtn\\\"\\n                    [hidden] = !updateMode\\n                    (click)=\\\"updateSection()\\\"\\n                    class=\\\"btn btn-success\\\"\\n                    style=\\\"margin-left:0%; width: 100%;\\\">\\n              Update Section\\n            </button>\\n            <button id=\\\"cancelUpdateBtn\\\"\\n                    [hidden]=!updateMode\\n                    (click)=\\\"cancelUpdateMode()\\\"\\n                    class=\\\"btn btn-secondary mt-2 mb-3\\\"\\n                    style=\\\"margin-left:0%; width: 100%;\\\">\\n              Cancel\\n            </button>\\n          </form>\\n          </div>\\n\\n\\n          <div [hidden]=!addMode class=\\\"mb-3\\\">\\n            <form>\\n\\n              <div class=\\\"form-group row\\\">\\n                <label for=\\\"sectionFld\\\" class=\\\"text-center col-form-label\\\" style=\\\"width:15%\\\">\\n                  Section Name </label>\\n                <div class=\\\"col-sm-10\\\">\\n                  <input [ngModelOptions]=\\\"{standalone: true}\\\"\\n                         [(ngModel)]=\\\"sectionName\\\"\\n                         id=\\\"sectionFld\\\"\\n                         class=\\\"form-control wbdv-password-fld\\\"\\n                         placeholder=\\\"Section Name\\\">\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group row\\\">\\n                <label for=\\\"seatsFld\\\" class=\\\"text-center col-form-label\\\" style=\\\"width:15%\\\">\\n                  Max Seats </label>\\n                <div class=\\\"col-sm-10\\\">\\n                  <input [ngModelOptions]=\\\"{standalone: true}\\\"\\n                         [(ngModel)]=\\\"maxSeats\\\"\\n                         id=\\\"seatsFld\\\"\\n                         class=\\\"form-control wbdv-password-fld\\\"\\n                         placeholder=\\\"Max Seats in section\\\">\\n                </div>\\n              </div>\\n              <button id=\\\"createBtn\\\"\\n                      [hidden]=updateMode\\n                      (click)=\\\"createSection(sectionName, maxSeats)\\\"\\n                      class=\\\"btn\\\"\\n                      style=\\\"margin-left:0%; width: 100%; color: white; background-color: orange\\\">\\n                Add Section\\n              </button>\\n              <button id=\\\"cancelBtn\\\"\\n                      [hidden]=updateMode\\n                      (click)=\\\"cancel()\\\"\\n                      class=\\\"btn btn-secondary mt-2\\\"\\n                      style=\\\"margin-left:0%; width: 100%;\\\">\\n                Cancel\\n              </button>\\n            </form>\\n          </div>\\n          <ul class=\\\"list-group rounded py-1 my-1\\\" style=\\\"width: 36rem\\\">\\n            <li *ngFor=\\\"let section of sections\\\" class=\\\"list-group-item shadow bg-light\\\">\\n              <span style=\\\"font-size: large; color:dodgerblue;\\\"> </span>{{section.name}}\\n              <button (click)=\\\"deleteSection(section)\\\"\\n                      class=\\\"float-right btn btn-outline-danger float-right mt-2\\\">\\n                <i class=\\\"fas fa-trash-alt\\\"></i></button>\\n              <button (click)=\\\"editSection(section)\\\"\\n                      class=\\\"float-right btn btn-outline-success float-right mt-2 mr-2\\\">\\n                <i class=\\\"fas fa-pencil-alt\\\"></i></button>\\n              <br>\\n              <span style=\\\"color: dimgrey; font-style: italic \\\"> Max Seats :  </span>\\n              {{section.maxSeats}}\\n              <span style=\\\"color: dimgrey; font-style: italic \\\">&nbsp;&nbsp;|&nbsp;&nbsp; Seats Available :  </span>\\n              {{section.seats}}\\n            </li>\\n          </ul>\\n          <br>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Course} from '../models/course.model.client';\nimport {SectionServiceClient} from '../services/section.service.client';\nimport {CourseServiceClient} from '../services/course.service.client';\nimport {UserServiceClient} from '../services/user.service.client';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  sections = [];\n  courses: Course[] = [];\n  selectedCourseId;\n  addMode = false;\n  updateMode = false;\n  updateId = 0;\n  sectionName = '';\n  maxSeats = '';\n  seats = '';\n  currentMaxSeats;\n  currentSeats;\n  username;\n  admin = false;\n  loggedIn = true;\n  constructor(private service: CourseServiceClient,\n              private sectionService: SectionServiceClient,\n              private userService: UserServiceClient,\n              private router: Router) {\n  }\n  loadSections() {\n    this\n      .sectionService\n      .findSectionsForCourse(this.selectedCourseId)\n      .then(sections => this.sections = sections);\n  }\n  logout() {\n    this.userService\n      .logout()\n      .then(() =>\n        this.router.navigate(['login']));\n\n  }\n  addSection() {\n    this.addMode = true;\n  }\n\n  cancel() {\n    this.addMode = false;\n  }\n\n  cancelUpdateMode() {\n    this.updateMode = false;\n  }\n  editSection(section) {\n    this.updateMode = true;\n    this.sectionName = section.name;\n    this.maxSeats = section.maxSeats;\n    this.currentSeats = section.seats;\n    this.currentMaxSeats = section.maxSeats;\n    this.updateId = section._id;\n  }\n\n  deleteSection(section) {\n    // alert('delete section : ' + section._id);\n    this\n      .sectionService\n      .deleteSection(section._id)\n      .then(() => {\n        this.sectionService\n          .unEnrollAllStudentsFromSection(section._id)\n          .then(() => {\n            this.loadSections();\n          });\n      });\n  }\n\n  updateSection() {\n    if (this.maxSeats.valueOf() > this.currentMaxSeats.valueOf()) {\n      this.seats = (Number(this.currentSeats) + (Number(this.maxSeats) - Number(this.currentMaxSeats))).toString();\n      console.log('New maxSeats : ', this.maxSeats, ' | New Available seats (??): ', this.seats);\n      console.log('Current maxSeats : ', this.currentMaxSeats, ' | Current Available seats : ', this.currentSeats);\n      this\n        .sectionService\n        .updateSection(this.updateId, this.sectionName, this.maxSeats, this.seats)\n        .then(() => {\n          this.loadSections();\n        });\n      alert('Section updated');\n      this.updateMode = false;\n      this.sectionName = '';\n      this.maxSeats = '';\n    } else {\n      this.seats = (Number(this.currentSeats) - (Number(this.currentMaxSeats) - Number(this.maxSeats))).toString();\n      console.log('New maxSeats : ', this.maxSeats, ' | New Available seats (??): ', this.seats);\n      console.log('Current maxSeats : ', this.currentMaxSeats, ' | Current Available seats : ', this.currentSeats);\n      if ( this.seats.valueOf() < '0'.valueOf()) {\n        alert('You cannot decrease seats to ' + this.maxSeats + ' \\n' +\n          '(as ' + (this.currentMaxSeats - this.currentSeats) + ' students are already enrolled.)');\n      } else {\n        this\n          .sectionService\n          .updateSection(this.updateId, this.sectionName, this.maxSeats, this.seats)\n          .then(() => {\n            this.loadSections();\n          });\n        alert('Section updated');\n        this.updateMode = false;\n        this.sectionName = '';\n        this.maxSeats = '';\n      }\n    }\n  }\n\n  createSection(sectionName, maxSeats) {\n    // console.log(sectionName, ' ', seats);\n    if (this.sectionName === '') {\n      alert('Enter Section Name');\n    } else {\n      if (this.maxSeats === '') {\n        alert('Enter Number of Maximum seats');\n      } else {\n        this\n          .sectionService\n          .createSection(this.selectedCourseId, sectionName, maxSeats, maxSeats)\n          .then(() => {\n            // this.loadSections(this.courseId);\n            this.sectionService\n              .findSectionsForCourse(this.selectedCourseId)\n              .then(sections => {\n                this.sections = sections;\n                this.sectionName = '';\n                this.maxSeats = '';\n                this.addMode = false;\n              });\n          });\n      }\n    }\n  }\n\n  selectCourse(id) {\n    this.selectedCourseId = id;\n    this.sectionService\n      .findSectionsForCourse(this.selectedCourseId)\n      .then(sections => this.sections = sections);\n  }\n\n  ngOnInit() {\n    this.userService\n      .profile()\n      .then((user) => {\n        console.log('logged in as : ', user);\n        this.username = user.username;\n        if (this.username === 'No session maintained') {\n          this.loggedIn = false;\n        }\n        if (this.username === 'admin') {\n          this.admin = true;\n        }\n      });\n\n    this.service.findAllCourses()\n      .then(courses => {\n        this.courses = courses;\n        this.selectedCourseId = this.courses[0].id;\n        this.sectionService\n          .findSectionsForCourse(this.selectedCourseId)\n          .then(sections => this.sections = sections);\n      });\n  }\n}\n","module.exports = \"\\r\\n\"","module.exports = \"<router-outlet></router-outlet>\\n<!--<app-white-board></app-white-board>-->\\n<!--<app-course-navigator></app-course-navigator>-->\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HelloWorldComponent } from './hello-world/hello-world.component';\nimport {FormsModule} from '@angular/forms';\nimport {CourseNavigatorServiceClient} from './services/course-navigator.service.client';\nimport { CourseNavigatorComponent } from './course-navigator/course-navigator.component';\nimport { WhiteBoardComponent } from './white-board/white-board.component';\nimport { CourseGridComponent } from './course-grid/course-grid.component';\nimport {CourseServiceClient} from './services/course.service.client';\nimport {routing} from './app.routing';\nimport { CourseViewerComponent } from './course-viewer/course-viewer.component';\nimport { ModuleListComponent } from './module-list/module-list.component';\nimport { LessonTabsComponent } from './lesson-tabs/lesson-tabs.component';\nimport { TopicPillsComponent } from './topic-pills/topic-pills.component';\nimport { WidgetListComponent } from './widget-list/widget-list.component';\nimport {ModuleServiceClient} from './services/module.service.client';\nimport {LessonServiceClient} from './services/lesson.service.client';\nimport {WidgetServiceClient} from './services/widget.service.client';\nimport {TopicServiceClient} from './services/topic.service.client';\nimport { RegisterComponent } from './register/register.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { LoginComponent } from './login/login.component';\nimport {UserServiceClient} from './services/user.service.client';\nimport { SectionListComponent } from './section-list/section-list.component';\nimport {SectionServiceClient} from './services/section.service.client';\nimport { EnrolledCoursesComponent } from './enrolled-courses/enrolled-courses.component';\nimport { AdminComponent } from './admin/admin.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HelloWorldComponent,\n    CourseNavigatorComponent,\n    WhiteBoardComponent,\n    CourseGridComponent,\n    CourseViewerComponent,\n    ModuleListComponent,\n    LessonTabsComponent,\n    TopicPillsComponent,\n    WidgetListComponent,\n    RegisterComponent,\n    ProfileComponent,\n    LoginComponent,\n    SectionListComponent,\n    EnrolledCoursesComponent,\n    AdminComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    routing\n  ],\n  providers: [\n    CourseNavigatorServiceClient,\n    CourseServiceClient,\n    ModuleServiceClient,\n    LessonServiceClient,\n    TopicServiceClient,\n    WidgetServiceClient,\n    UserServiceClient,\n    SectionServiceClient\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { WhiteBoardComponent } from './white-board/white-board.component';\r\nimport {CourseViewerComponent} from './course-viewer/course-viewer.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {RegisterComponent} from './register/register.component';\r\nimport {ProfileComponent} from './profile/profile.component';\r\nimport {SectionListComponent} from './section-list/section-list.component';\r\nimport {AdminComponent} from './admin/admin.component';\r\nconst appRoutes: Routes = [\r\n  { path: '', redirectTo: 'home', pathMatch: 'full'},\r\n  { path: 'home', component: WhiteBoardComponent},\r\n  { path: 'login', component: LoginComponent},\r\n  { path: 'register', component: RegisterComponent},\r\n  { path: 'profile', component: ProfileComponent},\r\n  { path: 'admin', component: AdminComponent},\r\n  { path: 'course/:courseId', component: CourseViewerComponent },\r\n  { path: 'course/:courseId/section', component: SectionListComponent },\r\n  { path: 'course/:courseId/module/:moduleId', component: CourseViewerComponent },\r\n  { path: 'course/:courseId/module/:moduleId/lesson/:lessonId', component: CourseViewerComponent },\r\n  { path: 'course/:courseId/module/:moduleId/lesson/:lessonId/topic/:topicId', component: CourseViewerComponent },\r\n  { path: '**', component: WhiteBoardComponent} // last\r\n];\r\nexport const routing = RouterModule.forRoot(appRoutes);\r\n","module.exports = \".card{\\r\\n  margin-bottom: 20px;\\r\\n}\\r\\n\"","module.exports = \"<h2 style=\\\"color: #0069d9;\\\">All Courses ({{courses.length}})</h2>\\n<!--<br/>-->\\n<div class=\\\"row pt-3\\\" >\\n  <div *ngFor=\\\"let course of courses\\\" class=\\\"col-sm-3 \\\">\\n    <div class=\\\"card rounded shadow\\\">\\n      <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">{{course.title}}</h5>\\n        <!--<p class=\\\"card-text\\\">Explore this course.</p>-->\\n        <a routerLink=\\\"/course/{{course.id}}\\\" class=\\\"btn shadow btn-primary\\\">View Modules</a>\\n        &nbsp;&nbsp;&nbsp;\\n      </div>\\n      <div class=\\\"card-footer text-muted\\\" [hidden] = admin>\\n        <a routerLink=\\\"/course/{{course.id}}/section\\\"\\n           class=\\\"btn btn-success shadow-lg\\\">Enroll</a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {CourseServiceClient} from '../services/course.service.client';\nimport {Course} from '../models/course.model.client';\nimport {UserServiceClient} from '../services/user.service.client';\n\n@Component({\n  selector: 'app-course-grid',\n  templateUrl: './course-grid.component.html',\n  styleUrls: ['./course-grid.component.css']\n})\nexport class CourseGridComponent implements OnInit {\n\n  constructor(private service: CourseServiceClient,\n              private userService: UserServiceClient) { }\n\n  courses: Course[] = [];\n  admin = false;\n  username = '';\n\n  ngOnInit() {\n\n    this.userService\n      .profile()\n      .then(user => {\n        this.username = user.username;\n        if (this.username === 'admin') {\n          this.admin = true;\n        }\n        this.service.findAllCourses()\n          .then(courses => this.courses = courses);\n      });\n  }\n\n}\n","module.exports = \".list-group-item.active.course {\\r\\n  z-index: 2;\\r\\n  color: #fff;\\r\\n  background-color: rgba(0,168,255,0.9);\\r\\n  border-color: rgba(0,168,255,0.9);\\r\\n}\\r\\n\\r\\n.list-group-item.active.module {\\r\\n  z-index: 2;\\r\\n  color: #fff;\\r\\n  background-color: rgba(240,168,205,0.9);\\r\\n  border-color: rgba(240,168,205,0.9);\\r\\n}\\r\\n\\r\\n.list-group-item.active.lesson {\\r\\n  z-index: 2;\\r\\n  color: #fff;\\r\\n  background-color: rgba(20,240,160,0.7);\\r\\n  border-color: rgba(20,240,160,0.7);\\r\\n}\\r\\n\\r\\n.list-group-item.active.topic {\\r\\n  z-index: 2;\\r\\n  color: #fff;\\r\\n  background-color: rgba(90,240,20,0.9);\\r\\n  border-color: rgba(90,240,20,0.9);\\r\\n}\\r\\n\\r\\n.list-group-item.active.widget {\\r\\n  z-index: 2;\\r\\n  color: #fff;\\r\\n  background-color: rgba(245,155,20,0.9);\\r\\n  border-color: rgba(245,155,20,0.9);\\r\\n}\\r\\n\"","module.exports = \"    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <ul class=\\\"list-group shadow\\\">\\n          <li class=\\\"list-group-item active\\\">\\n            Courses</li>\\n          <li class=\\\"list-group-item course\\\"\\n              *ngFor=\\\"let course of courses\\\"\\n              (click)=\\\"selectCourse(course.id)\\\"\\n              [ngClass]=\\\"{'active': course.id === selectedCourseId}\\\">\\n            {{course.title}}</li>\\n        </ul>\\n      </div>\\n      <div class=\\\"col\\\">\\n        <ul class=\\\"list-group shadow\\\">\\n          <li class=\\\"list-group-item active\\\">\\n            Modules</li>\\n          <li class=\\\"list-group-item module\\\"\\n              *ngFor=\\\"let module of modules\\\"\\n              (click)=\\\"selectModule(module.id)\\\"\\n              [ngClass]=\\\"{'active': module.id === selectedModuleId}\\\">\\n            {{module.title}}\\n          </li>\\n        </ul>\\n      </div>\\n      <div class=\\\"col\\\">\\n        <ul class=\\\"list-group shadow\\\">\\n          <li class=\\\"list-group-item active\\\">\\n            Lessons</li>\\n          <li class=\\\"list-group-item lesson\\\"\\n              *ngFor=\\\"let lesson of lessons\\\"\\n              (click)=\\\"selectLesson(lesson.id)\\\"\\n              [ngClass]=\\\"{'active': lesson.id === selectedLessonId}\\\">\\n            {{lesson.title}}</li>\\n        </ul>\\n      </div>\\n      <div class=\\\"col\\\">\\n        <ul class=\\\"list-group shadow\\\">\\n          <li class=\\\"list-group-item active\\\">\\n            Topics</li>\\n          <li class=\\\"list-group-item topic\\\"\\n              *ngFor=\\\"let topic of topics\\\"\\n              (click)=\\\"selectTopic(topic.id)\\\"\\n              [ngClass]=\\\"{'active': topic.id === selectedTopicId}\\\">\\n            {{topic.title}}</li>\\n        </ul>\\n      </div>\\n      <div class=\\\"col\\\">\\n        <ul class=\\\"list-group shadow\\\">\\n          <li class=\\\"list-group-item active\\\">\\n            Widgets</li>\\n          <li class=\\\"list-group-item widget\\\"\\n              *ngFor=\\\"let widget of widgets\\\"\\n              (click)=\\\"selectWidget(widget.id)\\\"\\n              [ngClass]=\\\"{'active': widget.id === selectedWidgetId}\\\">\\n            {{widget.widgetType}}\\n            <!--<br>-->\\n            <!--Title: {{widget.title}}</li>-->\\n        </ul>\\n      </div>\\n    </div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {CourseNavigatorServiceClient} from '../services/course-navigator.service.client';\n\n@Component({\n  selector: 'app-course-navigator',\n  templateUrl: './course-navigator.component.html',\n  styleUrls: ['./course-navigator.component.css']\n})\nexport class CourseNavigatorComponent implements OnInit {\n\n  constructor(private service:\n                CourseNavigatorServiceClient) { }\n  courses = [];\n  modules = [];\n  lessons = [];\n  topics = [];\n  widgets = [];\n  selectedCourseId = 0;\n  selectedModuleId = 0;\n  selectedLessonId = 0;\n  selectedTopicId = 0;\n  selectedWidgetId = 0;\n\n  selectCourse(courseId) {\n    this.selectedCourseId = courseId;\n    this.selectedModuleId = 0;\n    this.selectedLessonId = 0;\n    this.selectedTopicId = 0;\n    this.selectedWidgetId = 0;\n    this.modules = [];\n    this.lessons = [];\n    this.topics = [];\n    this.widgets = [];\n    this.service.findAllModulesForCourse(courseId)\n      .then(modules => this.modules = modules);\n  }\n\n  selectModule(moduleId) {\n    this.selectedModuleId = moduleId;\n    this.selectedLessonId = 0;\n    this.selectedTopicId = 0;\n    this.selectedWidgetId = 0;\n    this.lessons = [];\n    this.topics = [];\n    this.widgets = [];\n    // alert('Course ID: ' + this.selectedCourseId + 'Module ID: ' + moduleId);\n    this.service.findAllLessonsForModule(this.selectedCourseId, moduleId)\n      .then(lessons => this.lessons = lessons);\n  }\n\n  selectLesson(lessonId) {\n    this.selectedLessonId = lessonId;\n    this.selectedTopicId = 0;\n    this.selectedWidgetId = 0;\n    this.topics = [];\n    this.widgets = [];\n    this.service.findAllTopicsForLesson(this.selectedCourseId, this.selectedModuleId, lessonId)\n      .then(topics => this.topics = topics);\n  }\n\n  selectTopic(topicId) {\n    this.selectedTopicId = topicId;\n    this.selectedWidgetId = 0;\n    this.widgets = [];\n    this.service.findAllWidgetsForTopic(this.selectedCourseId, this.selectedModuleId, this.selectedLessonId, topicId)\n      .then(widgets => this.widgets = widgets);\n  }\n\n  selectWidget(widgetId) {\n    this.selectedWidgetId = widgetId;\n    // alert('Widget : ' + widgetId);\n  }\n\n  ngOnInit() {\n    this.service.findAllCourses()\n      .then(courses => {\n        this.courses = courses;\n      });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"mr-1 ml-1 mt-0 p-3\\\">\\n  <h2 style=\\\"color: #0069d9;\\\">{{course.title}}</h2>\\n  <app-module-list></app-module-list>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Course} from '../models/course.model.client';\nimport {ActivatedRoute} from '@angular/router';\nimport {CourseServiceClient} from '../services/course.service.client';\n\n@Component({\n  selector: 'app-course-viewer',\n  templateUrl: './course-viewer.component.html',\n  styleUrls: ['./course-viewer.component.css']\n})\nexport class CourseViewerComponent implements OnInit {\n\n  constructor(private service: CourseServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(params => this.loadCourse(params['courseId']));\n  }\n\n  course: Course = new Course();\n  loadCourse(courseId) {\n    // console.log(courseId);\n    this.service.findCourseById(courseId)\n      .then(course => this.course = course);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2 style=\\\"color: #0069d9;\\\">My Active Courses : {{courseList.length}} </h2>\\n\\n<!--<br/>-->\\n<ul class=\\\"list-group py-1 my-1 rounded\\\" style=\\\"width: 20rem\\\">\\n  <li *ngFor=\\\"let course of courseList\\\" class=\\\"list-group-item shadow bg-light\\\">\\n    {{course.title}}\\n    <!--<div class=\\\"row\\\">-->\\n      <!--<div class=\\\"col-5 border-right my-0\\\">-->\\n        <!--{{course.title}}-->\\n      <!--</div>-->\\n      <!--<div class=\\\"col-7 pl-4\\\">-->\\n        <!--<span style=\\\"color: dimgrey;\\\">{{getSection(course.id)}}</span>-->\\n      <!--</div>-->\\n    <!--</div>-->\\n    <!--<span class=\\\"border-right border-danger mx-2\\\"></span>-->\\n    <!---->\\n  </li>\\n</ul>\\n\\n<!--<div class=\\\"row pt-3 my-2\\\" >-->\\n  <!--<div *ngFor=\\\"let course of courses\\\" class=\\\"col-sm-3 \\\">-->\\n    <!--<div class=\\\"card rounded shadow\\\">-->\\n      <!--<div class=\\\"card-body\\\">-->\\n        <!--<h5 class=\\\"card-title\\\">{{course.title}}</h5>-->\\n        <!--&lt;!&ndash;<p class=\\\"card-text\\\">Explore this course.</p>&ndash;&gt;-->\\n        <!--&nbsp;&nbsp;&nbsp;-->\\n      <!--</div>-->\\n    <!--</div>-->\\n  <!--</div>-->\\n<!--</div>-->\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Course} from '../models/course.model.client';\nimport {CourseServiceClient} from '../services/course.service.client';\nimport {SectionServiceClient} from '../services/section.service.client';\nimport {UserServiceClient} from '../services/user.service.client';\n\n@Component({\n  selector: 'app-enrolled-courses',\n  templateUrl: './enrolled-courses.component.html',\n  styleUrls: ['./enrolled-courses.component.css']\n})\nexport class EnrolledCoursesComponent implements OnInit {\n\n  constructor(private service: CourseServiceClient,\n              private sectionService: SectionServiceClient,\n              private userService: UserServiceClient) {\n  }\n\n  // courses: Course[] = [];\n  sections = [];\n  courseIds = [];\n  courseList: Course[] = [];\n\n  username;\n  admin = false;\n  loggedIn = true;\n\n  unique = (value, index, self) => {\n    return self.indexOf(value) === index;\n  }\n\n  getSection(courseId) {\n    for (let i = 0; i < this.sections.length; i++) {\n     if (courseId === this.sections[i].section.courseId) {\n       return (this.sections[i].section.name);\n     }\n    }\n    return ('');\n  }\n\n  ngOnInit() {\n      this.userService\n        .profile()\n        .then((user) => {\n            console.log('logged in as : ', user);\n            this.username = user.username;\n            if (this.username === 'No session maintained') {\n              this.loggedIn = false;\n            }\n            if (this.username === 'admin') {\n              this.admin = true;\n            }\n\n          if (this.loggedIn) {\n            this.sectionService\n              .findSectionsForStudent()\n              .then(sections => {\n                this.sections = sections;\n                for (let i = 0; i < this.sections.length; i++) {\n                  this.courseIds.push(this.sections[i].section.courseId\n                  //   {\n                  //   'section': this.sections[i].section.name,\n                  //   'course': this.sections[i].section.courseId\n                  // }\n                  );\n                }\n                this.courseIds = this.courseIds.filter(this.unique);\n                console.log('course ids: ', this.courseIds);\n\n                for (let i = 0; i < this.courseIds.length; i++) {\n                  (this.service.findCourseById(this.courseIds[i])\n                    .then((course) => {\n                        this.courseList.push(course);\n                    }));\n                }\n              });\n          }\n          }\n        );\n\n  }\n}\n","module.exports = \"\"","module.exports = \"\\n<h2> Courses {{courses.length}}</h2>\\n<ul>\\n  <li *ngFor=\\\"let course of courses\\\" class=\\\"list-item\\\">\\n    {{course.title}}\\n    <button (click)=\\\"deleteCourse(course.id)\\\"\\n            class=\\\"btn btn-danger\\\">\\n      Delete\\n    </button>\\n\\n  </li>\\n</ul>\\n\\n<input [(ngModel)]=\\\"courseTitle\\\"\\u000b\\tclass=\\\"form-control\\\"/>\\n\\n<button\\n  class=\\\"btn btn-success\\\"\\n  (click)=\\\"addCourse\\n(courseTitle)\\\">\\n  Add Course\\n</button>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-hello-world',\n  templateUrl: './hello-world.component.html',\n  styleUrls: ['./hello-world.component.css']\n})\nexport class HelloWorldComponent implements OnInit {\n\n  courseTitle;\n  message = 'hello from hello world component';\n  courses = [\n    {title: 'CS5200', id: 123},\n    {title: 'CS5610', id: 234},\n    {title: 'CS3200', id: 345},\n    {title: 'CS4550', id: 456}\n  ];\n\n  constructor() { }\n\n  // deleteCourse(courseId) {\n  //   alert('DELETE : ' + courseId);\n  // }\n\n  deleteCourse(courseId) {\n    this.courses =\n      this.courses\n        .filter(course =>\n          course.id !== courseId);\n  }\n\n  addCourse(title) {\n    const largestId = Math.max.apply(\n      Math, this.courses.map(\n        function(course) {\n          return course.id; }));\n    this.courses.push(\n      {title: title, id: largestId + 1}\n    ) ;\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".active.wbdv {\\r\\n  background-color: rgba(0, 170, 255, 0.12);\\r\\n  border-color: rgba(0, 170, 255, 0.12);\\r\\n}\\r\\n\\r\\n.active.wbdv a {\\r\\n  color: white;\\r\\n}\\r\\n\"","module.exports = \"<div>\\n<ul class=\\\"nav nav-tabs\\\">\\n  <li *ngFor=\\\"let lesson of lessons\\\"\\n      class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link wbdv\\\"\\n       [ngClass]=\\\"{'active': lesson.id == lessonId}\\\"\\n       routerLink=\\\"/course/{{courseId}}/module/{{moduleId}}/lesson/{{lesson.id}}\\\">\\n      {{lesson.title}}\\n    </a>\\n  </li>\\n</ul>\\n<!--<div class=\\\"border border-light rounded shadow-sm mt-2 mb-3 p-2 bg-light\\\">-->\\n  <div class=\\\"mt-2 mb-3 p-2\\\">\\n  <app-topic-pills></app-topic-pills>\\n</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {LessonServiceClient} from '../services/lesson.service.client';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-lesson-tabs',\n  templateUrl: './lesson-tabs.component.html',\n  styleUrls: ['./lesson-tabs.component.css']\n})\nexport class LessonTabsComponent implements OnInit {\n\n  constructor(private service: LessonServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(\n      params => this.setParams(params));\n  }\n\n  courseId = 0;\n  moduleId = 0;\n  lessonId = 0;\n  lessons = [];\n\n  setParams(params) {\n    this.courseId = params['courseId'];\n    this.moduleId = params['moduleId'];\n    this.lessonId = params['lessonId'];\n    this.loadLessons(this.courseId, this.moduleId);\n  }\n\n  loadLessons(courseId, moduleId) {\n    this.moduleId = moduleId;\n    // console.log('Module id : ', moduleId);\n    this.service.findLessonsForModule(courseId, moduleId)\n      .then(lessons => this.lessons = lessons);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light\\\" style=\\\"background-color: #e3f2fd;\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\" style=\\\"color: #007bff; font-size: x-large\\\">WhiteBoard</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarTogglerDemo\\\" aria-controls=\\\"navbarTogglerDemo\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarTogglerDemo\\\">\\n    <ul class=\\\"navbar-nav mr-auto mt-2 mt-lg-0\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/home\\\">Home</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/register\\\">Register</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\\n\\n\\n\\n<div style=\\\"margin: 5px; padding: 15px;\\\">\\n    <h2 style=\\\"color: #0069d9;\\\">Login</h2>\\n    <br>\\n\\n      <form>\\n        <div class=\\\"form-group row\\\">\\n          <label for=\\\"usernameFld\\\" class=\\\"col-sm-2 col-form-label text-center\\\">\\n            Username </label>\\n          <div class=\\\"col-sm-10\\\">\\n            <input [(ngModel)]=\\\"username\\\"\\n                   [ngModelOptions]=\\\"{standalone: true}\\\"\\n                   class=\\\"form-control\\\"\\n                   id=\\\"usernameFld\\\"\\n                   placeholder=\\\"username\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group row\\\">\\n          <label for=\\\"passwordFld\\\" class=\\\"col-sm-2 text-center col-form-label\\\">\\n            Password </label>\\n          <div class=\\\"col-sm-10\\\">\\n            <input [(ngModel)]=\\\"password\\\"\\n                   [ngModelOptions]=\\\"{standalone: true}\\\"\\n                   id=\\\"passwordFld\\\"\\n                   class=\\\"form-control wbdv-password-fld\\\"\\n                   placeholder=\\\"password\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group row align-content-center\\\">\\n          <div class=\\\"col-sm-12\\\">\\n            <button (click)=\\\"login(username, password)\\\"\\n                    id=\\\"loginBtn\\\" class=\\\"btn btn-primary mb-2\\\"\\n                    style=\\\"margin-left:3%; width: 97%;\\\">\\n              Login\\n            </button>\\n            <button (click)=\\\"reset(username, password)\\\"\\n              id=\\\"resetBtn\\\" class=\\\"btn btn-secondary btn-block\\\"\\n                    style=\\\"margin-left:3%; width: 97%;\\\">\\n\\n              Reset\\n            </button>\\n\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n\\n  <!--<a class=\\\"btn btn-outline-primary\\\" routerLink=\\\"/register\\\">Register</a>-->\\n  <!--&nbsp; &nbsp; &nbsp; &nbsp;-->\\n  <!--<a class=\\\"btn btn-outline-primary\\\" routerLink=\\\"/home\\\">Home</a>-->\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {UserServiceClient} from '../services/user.service.client';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n\n  username = '';\n  password = '';\n  user = {};\n\n  constructor(private router: Router,\n              private service: UserServiceClient) {\n  }\n\n  reset(username, password) {\n    this.username = '';\n    this.password = '';\n  }\n\n  login(username, password) {\n    if (username === '') {\n\n      alert('Enter username');\n    } else {\n      if (password === '') {\n        alert('Enter password');\n      } else {\n        this.service\n          .login(username, password)\n          .then((user) => {\n              console.log('user found : ', user);\n              if (user === null) {\n                alert('Invalid username or password.\\nPlease try again !');\n              } else {\n                if (this.password === user.password) {\n                  this.router.navigate(['profile']);\n                }\n              }\n            }\n          );\n      }\n    }\n  }\n\n  ngOnInit() {\n  }\n\n}\n","export class Course {\r\n  id: number;\r\n  title: string;\r\n}\r\n","module.exports = \".active.wbdv {\\r\\n  background-color: rgba(0, 170, 255, 0.65);\\r\\n  border-top-color: whitesmoke;\\r\\n  border-bottom-color: rgba(0, 170, 255, 0);\\r\\n  border-right-color: rgba(0, 170, 255, 0.02);\\r\\n  border-left-color: rgba(0, 170, 255, 0.02);\\r\\n  /*border-color: rgba(0, 170, 255, 0.65);*/\\r\\n}\\r\\n\\r\\n.active.wbdv a {\\r\\n  color: white;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-3\\\">\\n    <ul class=\\\"list-group rounded\\\">\\n      <li class=\\\"list-group-item active\\\">Modules</li>\\n      <li [ngClass]=\\\"{'active': module.id == moduleId}\\\" *ngFor=\\\"let module of modules\\\"\\n          class=\\\"list-group-item wbdv\\\">\\n        <a routerLink=\\\"/course/{{courseId}}/module/{{module.id}}\\\">\\n          {{module.title}}</a>\\n      </li>\\n    </ul>\\n  </div>\\n  <div class=\\\"col-9\\\">\\n    <app-lesson-tabs></app-lesson-tabs>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {ModuleServiceClient} from '../services/module.service.client';\n\n@Component({\n  selector: 'app-module-list',\n  templateUrl: './module-list.component.html',\n  styleUrls: ['./module-list.component.css']\n})\nexport class ModuleListComponent implements OnInit {\n\n  constructor(private service: ModuleServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(\n      params => this.setParams(params));\n  }\n\n  courseId = 0;\n  moduleId = 0;\n  modules = [];\n\n  setParams(params) {\n    this.courseId = params['courseId'];\n    this.moduleId = params['moduleId'];\n    this.loadModules(this.courseId);\n  }\n\n  loadModules(courseId) {\n    this.courseId = courseId;\n    this.service.findModulesForCourse(courseId)\n      .then(modules => this.modules = modules);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light\\\" style=\\\"background-color: #e3f2fd;\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\" style=\\\"color: #007bff; font-size: x-large\\\">WhiteBoard</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarTogglerDemo\\\" aria-controls=\\\"navbarTogglerDemo\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarTogglerDemo\\\">\\n    <ul class=\\\"navbar-nav mr-auto mt-2 mt-lg-0\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/home\\\">Home</a>\\n      </li>\\n      <li class=\\\"nav-item active disabled\\\" [hidden]=!loggedIn>\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/profile\\\">Profile</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" [hidden]=!loggedIn>\\n        <a class=\\\"nav-link\\\" [hidden]=!admin\\n           routerLink=\\\"/admin\\\">Admin</a>\\n      </li>\\n    </ul>\\n    <!--<form class=\\\"form-inline my-2 my-lg-0\\\">-->\\n    <form [hidden]=!loggedIn\\n          class=\\\"form-inline mt-2 mt-md-0\\\">\\n      <span class=\\\"navbar-text\\\">\\n        Logged in as : </span>\\n      <span style=\\\"color: dimgrey; font-weight: bold\\\">&nbsp;{{username}}\\n      </span>\\n      &nbsp;&nbsp;\\n      <button class=\\\"btn btn-outline-primary my-2 my-sm-0\\\"\\n              (click)=\\\"logout()\\\">Logout\\n      </button>\\n    </form>\\n\\n    <form [hidden]=loggedIn\\n          class=\\\"form-inline mt-2 mt-md-0\\\">\\n\\n      <button class=\\\"btn btn-outline-primary my-2 my-sm-0 mr-2\\\"\\n              routerLink=\\\"/login\\\">&nbsp;Login&nbsp;\\n      </button>\\n\\n      <button class=\\\"btn btn-outline-primary my-2 my-sm-0\\\"\\n              routerLink=\\\"/register\\\">Register\\n      </button>\\n    </form>\\n  </div>\\n</nav>\\n\\n\\n<div style=\\\"margin: 5px; padding: 15px;\\\">\\n  <h2 style=\\\"color: #0069d9;\\\">Profile</h2>\\n  <div [hidden]=!loggedIn>\\n    <br>\\n    <form>\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"inputUserName\\\" class=\\\"col-form-label ml-5 px-2\\\" style=\\\"width: 12%\\\">User Name</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <input [(ngModel)]=\\\"username\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                 type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputUserName\\\" placeholder=\\\"Username\\\" value=\\\"\\\">\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group row \\\">\\n        <label for=\\\"inputFirstName\\\" class=\\\"col-form-label ml-5 px-2\\\" style=\\\"width: 12%\\\">First Name</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <input [(ngModel)]=\\\"firstName\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                 type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputFirstName\\\" placeholder=\\\"Firstname\\\" value=\\\"\\\">\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group row \\\">\\n        <label for=\\\"inputLastName\\\" class=\\\"col-form-label ml-5 px-2\\\" style=\\\"width: 12%\\\">Last Name</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <input [(ngModel)]=\\\"lastName\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                 type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputLastName\\\" placeholder=\\\"Lastname\\\" value=\\\"\\\">\\n        </div>\\n      </div>\\n\\n\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"inputPhone\\\" class=\\\"col-form-label ml-5 px-2\\\" style=\\\"width: 12%\\\">Phone Number</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <input [(ngModel)]=\\\"phone\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                 type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputPhone\\\" placeholder=\\\"phone number\\\" value=\\\"\\\">\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"inputEmail\\\" class=\\\"col-form-label ml-5 px-2\\\" style=\\\"width: 12%\\\">Email</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <input [(ngModel)]=\\\"email\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                 type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputEmail\\\" placeholder=\\\"email\\\" value=\\\"\\\">\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"inputAddress\\\" class=\\\"col-form-label ml-5 px-2\\\" style=\\\"width: 12%\\\">Address</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <input [(ngModel)]=\\\"address\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                 type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputAddress\\\" placeholder=\\\"address\\\" value=\\\"\\\">\\n        </div>\\n      </div>\\n\\n      <button (click)=\\\"update()\\\"\\n              class=\\\"btn btn-primary\\\" style=\\\"margin-left:4%; width: 96%\\\">\\n        Update\\n      </button>\\n\\n    </form>\\n\\n    <div [hidden]=admin>\\n      <hr>\\n      <h2 class=\\\"ml-lg-4\\\" style=\\\"color: mediumblue;\\\">Sections Enrolled in : {{sections.length}}</h2>\\n      <ul class=\\\"list-group ml-lg-2\\\">\\n        <li *ngFor=\\\"let enrollment of sections\\\" class=\\\"list-group-item my-1 rounded bg-light shadow-sm col-md-8\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-4 border-right my-0\\\">\\n              <b>{{enrollment.section.name}}</b>\\n            </div>\\n            <div class=\\\"col-4 pl-4\\\">\\n              <span style=\\\"color: dimgrey;\\\">\\n                <i> Course : {{getCourseName(enrollment.section.courseId)}}</i>\\n              </span>\\n          </div>\\n            <div class=\\\"col-4 pl-4\\\">\\n              <button (click)=\\\"dropSection(enrollment)\\\"\\n\\n                      class=\\\"float-right btn btn-outline-danger mr-2\\\">\\n                <i class=\\\"fas fa-times\\\"></i>&nbsp;&nbsp;Un Enroll</button>\\n            </div>\\n          </div>\\n        </li>\\n      </ul>\\n\\n    </div>\\n\\n\\n  </div>\\n\\n\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {UserServiceClient} from '../services/user.service.client';\nimport {Router} from '@angular/router';\nimport {SectionServiceClient} from '../services/section.service.client';\nimport {CourseServiceClient} from '../services/course.service.client';\nimport {Course} from '../models/course.model.client';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(private service: UserServiceClient,\n              private sectionService: SectionServiceClient,\n              private courseService: CourseServiceClient,\n              private router: Router) {\n  }\n\n  username = '';\n  firstName = '';\n  lastName = '';\n  email = '';\n  address = '';\n  phone = '';\n  user = {};\n  admin = false;\n  loggedIn = true;\n  password;\n  sections = [];\n  courseIds = [];\n  courseList: Course[] = [];\n  updateId;\n\n  update() {\n    // console.log('Username : ', this.username);\n    // console.log('First name : ', this.firstName);\n    // console.log('Last name : ', this.lastName);\n    // console.log('email : ', this.email);\n    // console.log('address : ', this.address);\n    this.user = {\n      'username': this.username,\n      'firstName': this.firstName,\n      'lastName': this.lastName,\n      'email': this.email,\n      'address': this.address,\n      'phone': this.phone\n    };\n    // console.log('User : ', this.user);\n    // console.log('ID : ', this.updateId);\n    this\n      .service\n      .updateUser(this.updateId, this.user)\n      .then(() => {\n        alert('Profile updated !');\n      });\n  }\n\n  logout() {\n    this.service\n      .logout()\n      .then(() =>\n        this.router.navigate(['login']));\n\n  }\n\n  getCourseName(courseId) {\n    // console.log('course ID :' , courseId);\n    // console.log(this.courseList);\n    for (let i = 0; i < this.courseList.length; i++) {\n      if (courseId === this.courseList[i].id) {\n        return (this.courseList[i].title);\n      }\n    }\n    return ('');\n  }\n\n  dropSection(enrollment) {\n    // console.log('You will be un-enrolled from this course section.');\n    console.log(enrollment.section._id);\n    this.sectionService\n      .unEnrollStudentFromSection(enrollment._id, enrollment.section._id)\n      .then(() => {\n        this.sectionService\n          .findSectionsForStudent()\n          .then(sections => {\n            this.sections = sections;\n            for (let i = 0; i < this.sections.length; i++) {\n              this.courseIds.push({\n                'section': this.sections[i].section.name,\n                'course': this.sections[i].section.courseId\n              });\n            }\n            for (let i = 0; i < this.courseIds.length; i++) {\n              (this.courseService.findCourseById(this.courseIds[i].course)\n                .then((course) => {\n                  this.courseList.push(course);\n                }));\n            }\n          });\n        console.log('Successfully unenrolled !');\n      });\n  }\n\n\n  ngOnInit() {\n    this.service\n      .profile()\n      .then(userProfile => {\n        if (userProfile.username === 'No session maintained') {\n          this.loggedIn = false;\n          this.router.navigate(['login']);\n        }\n        if (userProfile.username === 'admin') {\n          this.admin = true;\n        }\n          this.service.findUserById(userProfile._id)\n            .then((user) => {\n              console.log('user from DB : ', user);\n              this.updateId = user._id;\n              this.username = user.username;\n              this.phone = user.phone;\n              this.email = user.email;\n              this.address = user.address;\n              this.firstName = user.firstName;\n              this.lastName = user.lastName;\n              if (this.username !== 'admin' && this.username !== 'No session maintained') {\n                this.sectionService\n                  .findSectionsForStudent()\n                  .then(sections => {\n                    this.sections = sections;\n                    console.log('Sections : ', sections);\n                    for (let i = 0; i < this.sections.length; i++) {\n                      this.courseIds.push({\n                        'section': this.sections[i].section.name,\n                        'course': this.sections[i].section.courseId\n                      });\n                    }\n                    for (let i = 0; i < this.courseIds.length; i++) {\n                      (this.courseService.findCourseById(this.courseIds[i].course)\n                        .then((course) => {\n                          this.courseList.push(course);\n                        }));\n                    }\n                  });\n              }\n            });\n        }\n      );\n  }\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light\\\" style=\\\"background-color: #e3f2fd;\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\" style=\\\"color: #007bff; font-size: x-large\\\">WhiteBoard</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarTogglerDemo\\\" aria-controls=\\\"navbarTogglerDemo\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarTogglerDemo\\\">\\n    <ul class=\\\"navbar-nav mr-auto mt-2 mt-lg-0\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/home\\\">Home</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\">Login</a>\\n      </li>\\n      <!--<li class=\\\"nav-item\\\">-->\\n      <!--<a class=\\\"nav-link\\\" routerLink=\\\"/register\\\">Register</a>-->\\n      <!--</li>-->\\n    </ul>\\n  </div>\\n</nav>\\n\\n<div style=\\\"margin: 5px; padding: 15px;\\\">\\n  <h2 style=\\\"color: #0069d9;\\\">Register</h2>\\n  <br>\\n\\n\\n  <form>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"usernameFld\\\"  class=\\\"col-form-label ml-5\\\" style=\\\"width: 12%\\\">Username</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"usernameFld\\\" name=\\\"first_name\\\" placeholder=\\\"Alice\\\"\\n               [(ngModel)]=\\\"username\\\"\\n               [ngModelOptions]=\\\"{standalone: true}\\\"\\n               required=\\\"required\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"passwordFld\\\"  class=\\\"col-form-label ml-5\\\" style=\\\"width: 12%\\\">Password</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"passwordFld\\\" name=\\\"password\\\" placeholder=\\\"123qwe#$%\\\"\\n               [(ngModel)]=\\\"password\\\"\\n               [ngModelOptions]=\\\"{standalone: true}\\\"\\n               required=\\\"required\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"verifyPasswordFld\\\" class=\\\"col-form-label ml-5\\\" style=\\\"width: 12%\\\">Verify Password</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input [(ngModel)]=\\\"password2\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n          type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"verifyPasswordFld\\\" name=\\\"verify_password\\\"\\n\\n        placeholder=\\\"123qwe#$%\\\" required=\\\"required\\\">\\n      </div>\\n    </div>\\n\\n    <button id=\\\"registerBtn\\\"\\n            type=\\\"button\\\"\\n            (click)=\\\"register(username, password, password2)\\\"\\n            class=\\\"btn text-white mb-2\\\" style=\\\"margin-left:3%; width: 97%; background-color: darkgreen\\\">Register\\n    </button>\\n\\n    <button (click)=\\\"reset(username, password, password2)\\\"\\n            id=\\\"resetBtn\\\" class=\\\"btn btn-secondary btn-block\\\"\\n            style=\\\"margin-left:3%; width: 97%;\\\">\\n\\n      Reset\\n    </button>\\n    <div>\\n    </div>\\n\\n  </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {UserServiceClient} from '../services/user.service.client';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private router: Router,\n              private service: UserServiceClient) { }\n\n  username = '';\n  password = '';\n  password2 = '';\n\n  register(username, password, password2) {\n    if (username === '') {\n      alert('Enter Username !');\n    } else {\n      this.service.findUserByUsername(username)\n        .then((user) => {\n          console.log('User found : ', user);\n          if (user !== null) {\n            alert('This username already exists');\n          } else {\n            if (password === '') {\n              alert('Enter Password !');\n            } else {\n              if (password2 === '') {\n                alert('Verify Password !');\n              } else if (password2 !== password) {\n                alert('Passwords do not match !');\n              } else {\n                this.service\n                  .createUser(username, password)\n                  .then(() =>\n                    this.router.navigate(['profile']));\n              }\n            }\n          }\n        });\n    }\n  }\n\n  reset(username, password, password2) {\n    this.username = '';\n    this.password = '';\n    this.password2 = '';\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light\\\" style=\\\"background-color: #e3f2fd;\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\" style=\\\"color: #007bff; font-size: x-large\\\">WhiteBoard</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarTogglerDemo\\\" aria-controls=\\\"navbarTogglerDemo\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarTogglerDemo\\\">\\n    <ul class=\\\"navbar-nav mr-auto mt-2 mt-lg-0\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/home\\\">Home</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" [hidden] = !loggedIn>\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/profile\\\">Profile</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" [hidden] = !loggedIn>\\n        <a class=\\\"nav-link\\\" [hidden] = !admin\\n           routerLink=\\\"/admin\\\">Admin</a>\\n      </li>\\n    </ul>\\n\\n    <form [hidden]=!loggedIn\\n          class=\\\"form-inline mt-2 mt-md-0\\\">\\n      <span class=\\\"navbar-text\\\">\\n      Logged in as : </span>\\n      <span style=\\\"color: dimgrey; font-weight: bold\\\">&nbsp;{{username}}\\n      </span>\\n      &nbsp;&nbsp;\\n      <button class=\\\"btn btn-outline-primary my-2 my-sm-0\\\"\\n              (click)=\\\"logout()\\\">Logout\\n      </button>\\n    </form>\\n\\n\\n    <form [hidden]=loggedIn\\n          class=\\\"form-inline mt-2 mt-md-0\\\">\\n\\n      <button class=\\\"btn btn-outline-primary my-2 my-sm-0 mr-2\\\"\\n              routerLink=\\\"/login\\\">&nbsp;Login&nbsp;\\n      </button>\\n\\n      <button class=\\\"btn btn-outline-primary my-2 my-sm-0\\\"\\n              routerLink=\\\"/register\\\">Register\\n      </button>\\n    </form>\\n\\n  </div>\\n</nav>\\n\\n<div style=\\\"margin: 5px; padding: 15px;\\\">\\n  <h2 style=\\\"color: darkorange\\\">Sections for course: {{courseId}}</h2>\\n\\n  <div [hidden]=admin>\\n    <ul class=\\\"list-group rounded py-1 my-1\\\" style=\\\"width: 36rem\\\">\\n      <li *ngFor=\\\"let section of sections\\\" class=\\\"list-group-item shadow bg-light\\\">\\n        <span style=\\\"font-size: large; color:dodgerblue;\\\"> </span>{{section.name}}\\n        <button\\n          (click)=\\\"enroll(section)\\\"\\n          class=\\\"float-right btn btn-primary float-right mt-2\\\">Enroll\\n        </button>\\n        <br> <span style=\\\"color: dimgrey; font-style: italic \\\"> Seats Available :  </span>\\n        {{section.seats}}\\n      </li>\\n    </ul>\\n  </div>\\n\\n\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {SectionServiceClient} from '../services/section.service.client';\nimport {UserServiceClient} from '../services/user.service.client';\n\n@Component({\n  selector: 'app-section-list',\n  templateUrl: './section-list.component.html',\n  styleUrls: ['./section-list.component.css']\n})\nexport class SectionListComponent implements OnInit {\n\n  constructor(private service: SectionServiceClient,\n              private userService: UserServiceClient,\n              private router: Router,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(params => this.loadSections(params['courseId']));\n  }\n\n  sectionName = '';\n  seats = '';\n  courseId = '';\n  sections = [];\n  username;\n  userId;\n  admin = false;\n  loggedIn = true;\n  updateMode = false;\n  updateId = 0;\n\n  loadSections(courseId) {\n    this.courseId = courseId;\n    this\n      .service\n      .findSectionsForCourse(courseId)\n      .then(sections => this.sections = sections);\n  }\n\n  enroll(section) {\n    if (this.loggedIn === true) {\n      // console.log('validating enrollment');\n      // console.log(this.userId, section._id);\n      // alert(section._id + 'check if student is already enrolled in this section');\n      this.service.findEnrollmentByCredentials(this.userId, section._id)\n        .then((enrollment) => {\n          // console.log('returned value -need null here !');\n          // console.log('check : ', enrollment);\n          console.log('Available Seats (in this section): ', section.seats);\n          if ( section.seats === 0) {\n            alert('Cannot Enroll. Seats Full !!');\n          } else {\n            if (enrollment != null) {\n              alert('You are already enrolled in this course !');\n            } else {\n              this.service\n                .enrollStudentInSection(section._id)\n                .then(() => {\n                  this.router.navigate(['profile']);\n                });\n            }\n          }\n        });\n    } else {\n      alert('Login to enroll in a course section.');\n    }\n }\n\n\n  logout() {\n    this.userService\n      .logout()\n      .then(() =>\n        this.router.navigate(['login']));\n\n  }\n\n  ngOnInit() {\n    this.userService\n      .profile()\n      .then((user) => {\n          console.log('logged in as : ', user);\n          this.username = user.username;\n          this.userId = user._id;\n          if (this.username === 'No session maintained') {\n            this.loggedIn = false;\n          }\n          if (this.username === 'admin') {\n            this.admin = true;\n          }\n        }\n      );\n  }\n\n}\n","export class CourseNavigatorServiceClient {\n  findAllCourses() {\n    return fetch('http://localhost:8080/api/course')\n      .then(response => response.json());\n  }\n  findAllModulesForCourse(courseId) {\n    return fetch('http://localhost:8080/api/course/' + courseId + '/module')\n      .then(response => response.json());\n  }\n  findAllLessonsForModule(courseId, moduleId) {\n    return fetch('http://localhost:8080/api/course/' + courseId + '/module/' + moduleId + '/lesson')\n      .then(response => response.json());\n  }\n  findAllTopicsForLesson(courseId, moduleId, lessonId) {\n    return fetch('http://localhost:8080/api/course/' + courseId + '/module/' + moduleId + '/lesson/' + lessonId + '/topic')\n      .then(response => response.json());\n  }\n  findAllWidgetsForTopic(courseId, moduleId, lessonId, topicId) {\n    return fetch('http://localhost:8080/api/topic/' + topicId + '/widget')\n      .then(response => response.json());\n  }\n}\n","export class CourseServiceClient {\r\n  COURSE_URL = 'http://localhost:8080/api/course';\r\n  findAllCourses() {\r\n    return fetch(this.COURSE_URL)\r\n      .then(response => response.json());\r\n  }\r\n  findCourseById(courseId) {\r\n    return fetch(this.COURSE_URL + '/' + courseId)\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","export class LessonServiceClient {\r\n  findLessonsForModule(courseId, moduleId) {\r\n    return fetch('http://localhost:8080/api/course/' + courseId + '/module/' + moduleId + '/lesson')\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","export class ModuleServiceClient {\r\n  MODULE_URL = 'http://localhost:8080/api/course/COURSE_ID/module';\r\n  findModulesForCourse(courseId) {\r\n    return fetch(this.MODULE_URL.replace('COURSE_ID', courseId))\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","export class SectionServiceClient {\r\n\r\n  SECTION_URL = 'http://localhost:4000/api/course/COURSEID/section';\r\n\r\n  findSectionsForStudent() {\r\n    const url = 'http://localhost:4000/api/student/section';\r\n    return fetch(url, {\r\n      credentials: 'include'\r\n    })\r\n      .then(response => response.json());\r\n  }\r\n\r\n  enrollStudentInSection(sectionId) {\r\n    console.log('Client works fine');\r\n    const url = 'http://localhost:4000/api/section/' + sectionId + '/enrollment';\r\n    return fetch(url, {\r\n      method: 'post',\r\n      credentials: 'include'\r\n    });\r\n  }\r\n\r\n  unEnrollStudentFromSection(enrollmentId, sectionId) {\r\n    console.log('EnrollmentID : ', enrollmentId, ' | SectionID : ', sectionId);\r\n    return fetch('http://localhost:4000/api/section/' + sectionId + '/enrollment/' + enrollmentId, {\r\n      method: 'delete',\r\n      credentials: 'include'\r\n    });\r\n  }\r\n\r\n  unEnrollAllStudentsFromSection(sectionId) {\r\n    console.log('SectionID : ', sectionId);\r\n    return fetch('http://localhost:4000/api/section/' + sectionId + '/enrollment', {\r\n      method: 'delete',\r\n      credentials: 'include'\r\n    });\r\n  }\r\n\r\n  findEnrollmentByCredentials(studentId, sectionId) {\r\n    console.log('student : ', studentId, ' | section : ', sectionId);\r\n    return fetch('http://localhost:4000/api/student/' + studentId + '/section/' + sectionId)\r\n      .then(response => response.json());\r\n  }\r\n\r\n  findSectionsForCourse(courseId) {\r\n    return fetch(this.SECTION_URL.replace('COURSEID', courseId))\r\n      .then(response => response.json());\r\n  }\r\n\r\n  createSection(courseId, name, maxSeats, seats) {\r\n    const section = {courseId, name, maxSeats, seats};\r\n    return fetch(this.SECTION_URL.replace('COURSEID', courseId), {\r\n      method: 'post',\r\n      body: JSON.stringify(section),\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteSection(sectionId) {\r\n    return fetch('http://localhost:4000/api/section/' + sectionId, {\r\n      method: 'delete',\r\n      credentials: 'include',\r\n    });\r\n  }\r\n\r\n  updateSection(sectionId, name, maxSeats, seats) {\r\n    const section = {name, maxSeats, seats};\r\n    console.log('section body at client service: ', section);\r\n    return fetch('http://localhost:4000/api/section/' + sectionId, {\r\n      method: 'put',\r\n      body: JSON.stringify(section),\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n}\r\n","export class TopicServiceClient {\r\n  findTopicsForLesson(courseId, moduleId, lessonId) {\r\n    return fetch('http://localhost:8080/api/course/' + courseId + '/module/' + moduleId + '/lesson/' + lessonId + '/topic')\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","export class UserServiceClient {\r\n\r\n  findUserById(userId) {\r\n    return fetch('http://localhost:4000/api/user/' + userId, {\r\n      method: 'get',\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    })\r\n      .then(response => response.json());\r\n  }\r\n\r\n  findUserByUsername(username) {\r\n    console.log('username : ', username);\r\n    return fetch('http://localhost:4000/api/user/username/' + username,\r\n      {\r\n        method: 'get',\r\n        credentials: 'include',\r\n        headers: {\r\n          'content-type': 'application/json'\r\n        }\r\n      })\r\n      .then(response => response.json());\r\n  }\r\n\r\n  login(username, password) {\r\n    const credentials = {\r\n      username: username,\r\n      password: password\r\n    };\r\n    return fetch('http://localhost:4000/api/login', {\r\n      method: 'post',\r\n      body: JSON.stringify(credentials),\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    }).then(response => response.json());\r\n  }\r\n\r\n  logout() {\r\n    return fetch('http://localhost:4000/api/logout', {\r\n      method: 'post',\r\n      credentials: 'include'\r\n    });\r\n  }\r\n\r\n  profile() {\r\n    return fetch('http://localhost:4000/api/profile',\r\n      {\r\n        credentials: 'include', // include, same-origin, *omit\r\n      })\r\n      .then((response) => {\r\n        console.log('response in client at Profile : ', response);\r\n        return response.json();\r\n      })\r\n      ;\r\n  }\r\n\r\n  createUser(username, password) {\r\n    const user = {\r\n      username: username,\r\n      password: password\r\n    };\r\n    return fetch('http://localhost:4000/api/user', {\r\n      body: JSON.stringify(user),\r\n      credentials: 'include', // include, same-origin, *omit\r\n      method: 'post',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n\r\n  updateUser(userId, user) {\r\n    return fetch('http://localhost:4000/api/user/' + userId, {\r\n      method: 'put',\r\n      body: JSON.stringify(user),\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n}\r\n","export class WidgetServiceClient {\r\n  findWidgetsForLesson(topicId) {\r\n    return fetch('http://localhost:8080/api/topic/' + topicId + '/widget')\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","module.exports = \".active.wbdv {\\r\\n  background-color: rgba(255, 120, 0, 0.85);\\r\\n  border-color: darkorange;\\r\\n}\\r\\n\\r\\n.active.wbdv a {\\r\\n  color: white;\\r\\n}\\r\\n\"","module.exports = \"<ul class=\\\"nav nav-pills\\\">\\n  <li *ngFor=\\\"let topic of topics\\\"\\n    class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link wbdv\\\"\\n       [ngClass]=\\\"{'active': topic.id == topicId}\\\"\\n       routerLink=\\\"/course/{{courseId}}/module/{{moduleId}}/lesson/{{lessonId}}/topic/{{topic.id}}\\\">\\n      {{topic.title}}\\n    </a>\\n  </li>\\n</ul>\\n<div class=\\\"border border-dark rounded shadow-sm mt-2 mb-3 p-2 bg-light\\\" >\\n  <app-widget-list></app-widget-list>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {TopicServiceClient} from '../services/topic.service.client';\n\n@Component({\n  selector: 'app-topic-pills',\n  templateUrl: './topic-pills.component.html',\n  styleUrls: ['./topic-pills.component.css']\n})\nexport class TopicPillsComponent implements OnInit {\n\n  constructor(private service: TopicServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(\n      params => this.setParams(params));\n  }\n\n  courseId = 0;\n  moduleId = 0;\n  lessonId = 0;\n  topicId = 0;\n  topics = [];\n\n  setParams(params) {\n    this.courseId = params['courseId'];\n    this.moduleId = params['moduleId'];\n    this.lessonId = params['lessonId'];\n    this.topicId = params['topicId'];\n    this.loadTopics(this.courseId, this.moduleId, this.lessonId);\n  }\n\n  loadTopics(courseId, moduleId, lessonId) {\n    this.lessonId = lessonId;\n    console.log('Topic Pills constructor called !!');\n    // console.log('Lesson : ', lessonId + ' | Topic : ', this.topicId);\n    this.service.findTopicsForLesson(courseId, moduleId, lessonId)\n      .then(topics => this.topics = topics);\n  }\n\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light\\\" style=\\\"background-color: #e3f2fd;\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\" style=\\\"color: #007bff; font-size: x-large\\\">WhiteBoard</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarTogglerDemo\\\" aria-controls=\\\"navbarTogglerDemo\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarTogglerDemo\\\">\\n    <ul class=\\\"navbar-nav mr-auto mt-2 mt-lg-0\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/home\\\">Home</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" [hidden] = !loggedIn>\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/profile\\\">Profile</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" [hidden] = !loggedIn>\\n        <a class=\\\"nav-link\\\" [hidden] = !admin\\n           routerLink=\\\"/admin\\\">Admin</a>\\n      </li>\\n    </ul>\\n\\n    <form [hidden]=!loggedIn\\n          class=\\\"form-inline mt-2 mt-md-0\\\">\\n      <span class=\\\"navbar-text\\\">\\n      Logged in as : </span>\\n      <span style=\\\"color: dimgrey; font-weight: bold\\\">&nbsp;{{username}}\\n      </span>\\n      &nbsp;&nbsp;\\n      <button class=\\\"btn btn-outline-primary my-2 my-sm-0\\\"\\n              (click)=\\\"logout()\\\">Logout\\n      </button>\\n    </form>\\n\\n\\n    <form [hidden]=loggedIn\\n          class=\\\"form-inline mt-2 mt-md-0\\\">\\n\\n      <button class=\\\"btn btn-outline-primary my-2 my-sm-0 mr-2\\\"\\n              routerLink=\\\"/login\\\">&nbsp;Login&nbsp;\\n      </button>\\n\\n      <button class=\\\"btn btn-outline-primary my-2 my-sm-0\\\"\\n              routerLink=\\\"/register\\\">Register\\n      </button>\\n    </form>\\n\\n\\n  </div>\\n</nav>\\n\\n<div style=\\\"margin: 5px; padding: 15px;\\\">\\n  <div [hidden]=!loggedIn>\\n    <app-enrolled-courses [hidden]=admin></app-enrolled-courses>\\n    <hr/>\\n  </div>\\n  <app-course-grid></app-course-grid>\\n  <!--<h1 style=\\\"color: #007bff\\\">WhiteBoard</h1>-->\\n</div>\\n\\n\\n\"","import {Component, OnInit} from '@angular/core';\nimport {UserServiceClient} from '../services/user.service.client';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-white-board',\n  templateUrl: './white-board.component.html',\n  styleUrls: ['./white-board.component.css']\n})\nexport class WhiteBoardComponent implements OnInit {\n\n  username;\n  password;\n  admin = false;\n  loggedIn = false;\n\n  constructor(private service: UserServiceClient,\n              private router: Router) {\n  }\n\n  logout() {\n    this.service\n      .logout()\n      .then(() =>\n        this.router.navigate(['login']));\n\n  }\n\n  ngOnInit() {\n    this.service\n      .profile()\n      .then((user) => {\n          console.log('logged in as : ', user);\n          this.username = user.username;\n          if (this.username !== 'No session maintained') {\n            this.loggedIn = true;\n          }\n          if (this.username === 'admin') {\n            this.admin = true;\n          }\n        }\n      );\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div *ngFor=\\\"let widget of widgets\\\">\\n  <div [ngSwitch]=\\\"widget.widgetType\\\">\\n    <div *ngSwitchCase=\\\"'Heading'\\\">\\n      <div [ngSwitch]=\\\"widget.size\\\">\\n        <h1 *ngSwitchCase=\\\"'1'\\\">Heading Widget : <span style=\\\"color: orangered;\\\">{{widget.text}}</span></h1>\\n        <h2 *ngSwitchCase=\\\"'2'\\\">Heading Widget : <span style=\\\"color: orangered;\\\">{{widget.text}}</span></h2>\\n        <h3 *ngSwitchCase=\\\"'3'\\\">Heading Widget : <span style=\\\"color: orangered;\\\">{{widget.text}}</span></h3>\\n        <h4 *ngSwitchCase=\\\"'4'\\\">Heading Widget : <span style=\\\"color: orangered;\\\">{{widget.text}}</span></h4>\\n        <h5 *ngSwitchCase=\\\"'5'\\\">Heading Widget : <span style=\\\"color: orangered;\\\">{{widget.text}}</span></h5>\\n        <h6 *ngSwitchCase=\\\"'6'\\\">Heading Widget : <span style=\\\"color: orangered;\\\">{{widget.text}}</span></h6>\\n      </div>\\n    </div>\\n    <div *ngSwitchCase=\\\"'Link'\\\">\\n      <a href=\\\"{{widget.href}}\\\">{{widget.text}}</a>\\n    </div>\\n    <div *ngSwitchCase=\\\"'Image'\\\">\\n      <img src=\\\"{{widget.src}}\\\" alt=\\\"image\\\" class=\\\"shadow rounded card p-2\\\" height=\\\"250px\\\" />\\n    </div>\\n    <div *ngSwitchCase=\\\"'List'\\\">\\n      <h4>List Widget</h4>\\n      <ul class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item bg-light\\\"\\n            *ngFor=\\\"let item of widget.listItems.split('\\\\n')\\\">\\n          {{item}}\\n        </li>\\n      </ul>\\n    </div>\\n    <div *ngSwitchCase=\\\"'Exam'\\\">\\n      <h2 style=\\\"color: #5a6268\\\">Exam Widget</h2>\\n    </div>\\n    <div *ngSwitchCase=\\\"'Assignment'\\\">\\n      <h2 style=\\\"color: darkgreen\\\">Assignment Widget</h2>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {WidgetServiceClient} from '../services/widget.service.client';\n\n@Component({\n  selector: 'app-widget-list',\n  templateUrl: './widget-list.component.html',\n  styleUrls: ['./widget-list.component.css']\n})\nexport class WidgetListComponent implements OnInit {\n\n  constructor(private service: WidgetServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(params => this.setContext(params));\n  }\n\n  context;\n  widgets = [];\n  setContext(params) {\n    this.context = params;\n    this.loadWidgets(params.topicId);\n  }\n  loadWidgets(topicId) {\n    this.service.findWidgetsForLesson(topicId)\n      .then(widgets => this.widgets = widgets);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}